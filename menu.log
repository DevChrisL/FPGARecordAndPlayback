KCPSM6 Assembler log file for program 'C:\Users\montesv\Downloads\loopback\picoblaze\menu.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 30 Apr 2023
Assembly timestamp: 15:19:37

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 082 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 131
Memory locations available: 3965


Assembly listing

 Addr Code                     Instruction

 000                           ;================================================================
 000                           ; Port address definitions...
 000                           ;================================================================
 000                           CONSTANT switches, 00         ; Switch read port
 000                           CONSTANT leds, 01             ; LED write port
 000                           CONSTANT uart_data_rx, 02     ; UART receive read port
 000                           CONSTANT uart_data_tx, 03     ; UART transmit write port
 000                           CONSTANT data_present, 04     ; UART stat read port, lsb
 000                           CONSTANT buffer_full, 05      ; UART stat read port, lsb
 000                           ;================================================================
 000                           ; Useful constant declarations...
 000                           ;================================================================
 000                           CONSTANT all_clear, 00        ; define all clear
 000                           CONSTANT all_set, FF          ; define all set
 000                           CONSTANT ascii_NUL, 00        ; ascii code (null character)
 000                           CONSTANT ascii_SOH, 01        ; ascii code (start of header)
 000                           CONSTANT ascii_STX, 02        ; ascii code (start of text)
 000                           CONSTANT ascii_ETX, 03        ; ascii code (end of text)
 000                           CONSTANT ascii_EOT, 04        ; ascii code (end of xmit)
 000                           CONSTANT ascii_ENQ, 05        ; ascii code (enquiry)
 000                           CONSTANT ascii_ACK, 06        ; ascii code (acknowledge)
 000                           CONSTANT ascii_BEL, 07        ; ascii code (bell)
 000                           CONSTANT ascii_BS, 08         ; ascii code (backspace)
 000                           CONSTANT ascii_HT, 09         ; ascii code (horiz tab)
 000                           CONSTANT ascii_LF, 0A         ; ascii code (line feed)
 000                           CONSTANT ascii_VT, 0B         ; ascii code (vert tab)
 000                           CONSTANT ascii_FF, 0C         ; ascii code (form feed)
 000                           CONSTANT ascii_CR, 0D         ; ascii code (carriage return)
 000                           CONSTANT ascii_SO, 0E         ; ascii code (shift out)
 000                           CONSTANT ascii_SI, 0F         ; ascii code (shift in)
 000                           CONSTANT ascii_DLE, 10        ; ascii code (data link esc)
 000                           CONSTANT ascii_DC1, 11        ; ascii code (device ctrl 1, xon)
 000                           CONSTANT ascii_DC2, 12        ; ascii code (device ctrl 2)
 000                           CONSTANT ascii_DC3, 13        ; ascii code (device ctrl 3, xoff)
 000                           CONSTANT ascii_DC4, 14        ; ascii code (device ctrl 4)
 000                           CONSTANT ascii_NAK, 15        ; ascii code (negative acknowledge)
 000                           CONSTANT ascii_SYN, 16        ; ascii code (sync idle)
 000                           CONSTANT ascii_ETB, 17        ; ascii code (end xmit block)
 000                           CONSTANT ascii_CAN, 18        ; ascii code (cancel)
 000                           CONSTANT ascii_EM, 19         ; ascii code (end of medium)
 000                           CONSTANT ascii_SUB, 1A        ; ascii code (substitute)
 000                           CONSTANT ascii_ESC, 1B        ; ascii code (escape)
 000                           CONSTANT ascii_FS, 1C         ; ascii code (file separator)
 000                           CONSTANT ascii_GS, 1D         ; ascii code (group separator)
 000                           CONSTANT ascii_RS, 1E         ; ascii code (record separator)
 000                           CONSTANT ascii_US, 1F         ; ascii code (unit space)
 000                           CONSTANT ascii_SPACE, 20      ; ascii code
 000                           CONSTANT ascii_EXCLAIM, 21    ; ascii code
 000                           CONSTANT ascii_DBLQUOT, 22    ; ascii code
 000                           CONSTANT ascii_NUMSIGN, 23    ; ascii code
 000                           CONSTANT ascii_DOLLAR, 24     ; ascii code
 000                           CONSTANT ascii_PERCENT, 25    ; ascii code
 000                           CONSTANT ascii_AMP, 26        ; ascii code
 000                           CONSTANT ascii_SINQUOT, 27    ; ascii code
 000                           CONSTANT ascii_LPAREN, 28     ; ascii code
 000                           CONSTANT ascii_RPAREN, 29     ; ascii code
 000                           CONSTANT ascii_ASTERISK, 2A   ; ascii code
 000                           CONSTANT ascii_PLUS, 2B       ; ascii code
 000                           CONSTANT ascii_COMMA, 2C      ; ascii code
 000                           CONSTANT ascii_MINUS, 2D      ; ascii code
 000                           CONSTANT ascii_PERIOD, 2E     ; ascii code
 000                           CONSTANT ascii_FWDSLASH, 2F   ; ascii code
 000                           CONSTANT ascii_0, 30          ; ascii code
 000                           CONSTANT ascii_1, 31          ; ascii code
 000                           CONSTANT ascii_2, 32          ; ascii code
 000                           CONSTANT ascii_3, 33          ; ascii code
 000                           CONSTANT ascii_4, 34          ; ascii code
 000                           CONSTANT ascii_5, 35          ; ascii code
 000                           CONSTANT ascii_6, 36          ; ascii code
 000                           CONSTANT ascii_7, 37          ; ascii code
 000                           CONSTANT ascii_8, 38          ; ascii code
 000                           CONSTANT ascii_9, 39          ; ascii code
 000                           CONSTANT ascii_COLON, 3A      ; ascii code
 000                           CONSTANT ascii_SEMI, 3B       ; ascii code
 000                           CONSTANT ascii_LESS, 3C       ; ascii code
 000                           CONSTANT ascii_EQUAL, 3D      ; ascii code
 000                           CONSTANT ascii_GREATER, 3E    ; ascii code
 000                           CONSTANT ascii_QUESTION, 3F   ; ascii code
 000                           CONSTANT ascii_CIRCAT, 40     ; ascii code
 000                           CONSTANT ascii_A, 41          ; ascii code
 000                           CONSTANT ascii_B, 42          ; ascii code
 000                           CONSTANT ascii_C, 43          ; ascii code
 000                           CONSTANT ascii_D, 44          ; ascii code
 000                           CONSTANT ascii_E, 45          ; ascii code
 000                           CONSTANT ascii_F, 46          ; ascii code
 000                           CONSTANT ascii_G, 47          ; ascii code
 000                           CONSTANT ascii_H, 48          ; ascii code
 000                           CONSTANT ascii_I, 49          ; ascii code
 000                           CONSTANT ascii_J, 4A          ; ascii code
 000                           CONSTANT ascii_K, 4B          ; ascii code
 000                           CONSTANT ascii_L, 4C          ; ascii code
 000                           CONSTANT ascii_M, 4D          ; ascii code
 000                           CONSTANT ascii_N, 4E          ; ascii code
 000                           CONSTANT ascii_O, 4F          ; ascii code
 000                           CONSTANT ascii_P, 50          ; ascii code
 000                           CONSTANT ascii_Q, 51          ; ascii code
 000                           CONSTANT ascii_R, 52          ; ascii code
 000                           CONSTANT ascii_S, 53          ; ascii code
 000                           CONSTANT ascii_T, 54          ; ascii code
 000                           CONSTANT ascii_U, 55          ; ascii code
 000                           CONSTANT ascii_V, 56          ; ascii code
 000                           CONSTANT ascii_W, 57          ; ascii code
 000                           CONSTANT ascii_X, 58          ; ascii code
 000                           CONSTANT ascii_Y, 59          ; ascii code
 000                           CONSTANT ascii_Z, 5A          ; ascii code
 000                           CONSTANT ascii_LBKT, 5B       ; ascii code
 000                           CONSTANT ascii_BKSLASH, 5C    ; ascii code
 000                           CONSTANT ascii_RBKT, 5D       ; ascii code
 000                           CONSTANT ascii_CARET, 5E      ; ascii code
 000                           CONSTANT ascii_UNDER, 5F      ; ascii code
 000                           CONSTANT ascii_TICK, 60       ; ascii code
 000                           CONSTANT ascii_a, 61          ; ascii code
 000                           CONSTANT ascii_b, 62          ; ascii code
 000                           CONSTANT ascii_c, 63          ; ascii code
 000                           CONSTANT ascii_d, 64          ; ascii code
 000                           CONSTANT ascii_e, 65          ; ascii code
 000                           CONSTANT ascii_f, 66          ; ascii code
 000                           CONSTANT ascii_g, 67          ; ascii code
 000                           CONSTANT ascii_h, 68          ; ascii code
 000                           CONSTANT ascii_i, 69          ; ascii code
 000                           CONSTANT ascii_j, 6A          ; ascii code
 000                           CONSTANT ascii_k, 6B          ; ascii code
 000                           CONSTANT ascii_l, 6C          ; ascii code
 000                           CONSTANT ascii_m, 6D          ; ascii code
 000                           CONSTANT ascii_n, 6E          ; ascii code
 000                           CONSTANT ascii_o, 6F          ; ascii code
 000                           CONSTANT ascii_p, 70          ; ascii code
 000                           CONSTANT ascii_q, 71          ; ascii code
 000                           CONSTANT ascii_r, 72          ; ascii code
 000                           CONSTANT ascii_s, 73          ; ascii code
 000                           CONSTANT ascii_t, 74          ; ascii code
 000                           CONSTANT ascii_u, 75          ; ascii code
 000                           CONSTANT ascii_v, 76          ; ascii code
 000                           CONSTANT ascii_w, 77          ; ascii code
 000                           CONSTANT ascii_x, 78          ; ascii code
 000                           CONSTANT ascii_y, 79          ; ascii code
 000                           CONSTANT ascii_z, 7A          ; ascii code
 000                           CONSTANT ascii_LBRACE, 7B     ; ascii code
 000                           CONSTANT ascii_VBAR, 7C       ; ascii code
 000                           CONSTANT ascii_RBRACE, 7D     ; ascii code
 000                           CONSTANT ascii_TILDE, 7E      ; ascii code
 000                           CONSTANT ascii_DEL, 7F        ; ascii code
 000                           ;================================================================
 000                           ; Actual assembly program goes here...
 000                           ;
 000                           ; NOTE: size limit is 4096 lines of actual assembly code
 000                           ;       Old documentation says it is 1024. This is now incorrect.
 000                           ;================================================================
 000               cold_start: 
 000  00000                    LOAD s0, s0                   ; (nop)
 001                           ; Load "1 Play MSG" into memory
 001  01031                    LOAD s0, 31[ascii_1]
 002  2F000                    STORE s0, 00
 003  01020                    LOAD s0, 20[ascii_SPACE]
 004  2F001                    STORE s0, 01
 005  01050                    LOAD s0, 50[ascii_P]
 006  2F002                    STORE s0, 02
 007  0104C                    LOAD s0, 4C[ascii_L]
 008  2F003                    STORE s0, 03
 009  01041                    LOAD s0, 41[ascii_A]
 00A  2F004                    STORE s0, 04
 00B  01059                    LOAD s0, 59[ascii_Y]
 00C  2F005                    STORE s0, 05
 00D  0100D                    LOAD s0, 0D[ascii_CR]
 00E  2F006                    STORE s0, 06
 00F  0100A                    LOAD s0, 0A[ascii_LF]
 010  2F007                    STORE s0, 07
 011                           ; Load "2 REC MSG" into memory
 011  01032                    LOAD s0, 32[ascii_2]
 012  2F008                    STORE s0, 08
 013  01020                    LOAD s0, 20[ascii_SPACE]
 014  2F009                    STORE s0, 09
 015  01052                    LOAD s0, 52[ascii_R]
 016  2F00A                    STORE s0, 0A
 017  01045                    LOAD s0, 45[ascii_E]
 018  2F00B                    STORE s0, 0B
 019  01043                    LOAD s0, 43[ascii_C]
 01A  2F00C                    STORE s0, 0C
 01B  0105F                    LOAD s0, 5F[ascii_UNDER]
 01C  2F00D                    STORE s0, 0D
 01D  0104D                    LOAD s0, 4D[ascii_M]
 01E  2F00E                    STORE s0, 0E
 01F  01053                    LOAD s0, 53[ascii_S]
 020  2F00F                    STORE s0, 0F
 021  01047                    LOAD s0, 47[ascii_G]
 022  2F010                    STORE s0, 10
 023  0100D                    LOAD s0, 0D[ascii_CR]
 024  2F011                    STORE s0, 11
 025  0100A                    LOAD s0, 0A[ascii_LF]
 026  2F012                    STORE s0, 12
 027                           ; Load "3 DEL one" into memory
 027  01033                    LOAD s0, 33[ascii_3]
 028  2F013                    STORE s0, 13
 029  01020                    LOAD s0, 20[ascii_SPACE]
 02A  2F014                    STORE s0, 14
 02B  01044                    LOAD s0, 44[ascii_D]
 02C  2F015                    STORE s0, 15
 02D  01045                    LOAD s0, 45[ascii_E]
 02E  2F016                    STORE s0, 16
 02F  0104C                    LOAD s0, 4C[ascii_L]
 030  2F017                    STORE s0, 17
 031  0105F                    LOAD s0, 5F[ascii_UNDER]
 032  2F018                    STORE s0, 18
 033  01031                    LOAD s0, 31[ascii_1]
 034  2F019                    STORE s0, 19
 035  0104E                    LOAD s0, 4E[ascii_N]
 036  2F01A                    STORE s0, 1A
 037  01045                    LOAD s0, 45[ascii_E]
 038  2F01B                    STORE s0, 1B
 039  0100D                    LOAD s0, 0D[ascii_CR]
 03A  2F01B                    STORE s0, 1B
 03B  0100A                    LOAD s0, 0A[ascii_LF]
 03C  2F01C                    STORE s0, 1C
 03D                           ; Load "4 DEL all" into memory
 03D  01034                    LOAD s0, 34[ascii_4]
 03E  2F01D                    STORE s0, 1D
 03F  01020                    LOAD s0, 20[ascii_SPACE]
 040  2F01E                    STORE s0, 1E
 041  01044                    LOAD s0, 44[ascii_D]
 042  2F01F                    STORE s0, 1F
 043  01045                    LOAD s0, 45[ascii_E]
 044  2F020                    STORE s0, 20
 045  0104C                    LOAD s0, 4C[ascii_L]
 046  2F021                    STORE s0, 21
 047  0105F                    LOAD s0, 5F[ascii_UNDER]
 048  2F022                    STORE s0, 22
 049  01041                    LOAD s0, 41[ascii_A]
 04A  2F023                    STORE s0, 23
 04B  0104C                    LOAD s0, 4C[ascii_L]
 04C  2F024                    STORE s0, 24
 04D  0104C                    LOAD s0, 4C[ascii_L]
 04E  2F025                    STORE s0, 25
 04F  0100D                    LOAD s0, 0D[ascii_CR]
 050  2F026                    STORE s0, 26
 051  0100A                    LOAD s0, 0A[ascii_LF]
 052  2F027                    STORE s0, 27
 053                           ; Load "5 Volume" into memory
 053  01035                    LOAD s0, 35[ascii_5]
 054  2F028                    STORE s0, 28
 055  01020                    LOAD s0, 20[ascii_SPACE]
 056  2F029                    STORE s0, 29
 057  01056                    LOAD s0, 56[ascii_V]
 058  2F02A                    STORE s0, 2A
 059  0104F                    LOAD s0, 4F[ascii_O]
 05A  2F02B                    STORE s0, 2B
 05B  0104C                    LOAD s0, 4C[ascii_L]
 05C  2F02C                    STORE s0, 2C
 05D  01055                    LOAD s0, 55[ascii_U]
 05E  2F02D                    STORE s0, 2D
 05F  0104D                    LOAD s0, 4D[ascii_M]
 060  2F02E                    STORE s0, 2E
 061  01045                    LOAD s0, 45[ascii_E]
 062  2F02F                    STORE s0, 2F
 063  0100D                    LOAD s0, 0D[ascii_CR]
 064  2F030                    STORE s0, 30
 065  0100A                    LOAD s0, 0A[ascii_LF]
 066  2F031                    STORE s0, 31
 067                     main: 
 067  06000                    XOR s0, s0
 068              next_letter: 
 068  09305                    INPUT s3, 05[buffer_full]
 069  1D301                    COMPARE s3, 01
 06A  32071                    JUMP Z, 071[buffer_full_call]
 06B  0A100                    FETCH s1, (s0)
 06C  11001                    ADD s0, 01
 06D             ready_buffer: 
 06D  2D103                    OUTPUT s1, 03[uart_data_tx]
 06E  1D033                    COMPARE s0, 33
 06F  36068                    JUMP NZ, 068[next_letter]
 070  22073                    JUMP 073[led_echo]
 071         buffer_full_call: 
 071  00FF0                    LOAD sF, sF
 072  22068                    JUMP 068[next_letter]
 073  00000          led_echo: LOAD s0, s0                   ; (nop)
 074  09000                    INPUT s0, 00[switches]
 075  070FF                    XOR s0, FF
 076  2D001                    OUTPUT s0, 01[leds]
 077  22078                    JUMP 078[rs232_echo]
 078                           ; Code 2
 078                           ; Write code to read the switch state and
 078                           ; write it, inverted, to the LED output port.
 078  00000        rs232_echo: LOAD s0, s0                   ; (nop)
 079  06110                    XOR s1, s1
 07A  06220                    XOR s2, s2
 07B  09102                    INPUT s1, 02[uart_data_rx]
 07C  09204                    INPUT s2, 04[data_present]
 07D  1D201                    COMPARE s2, 01
 07E  32080                    JUMP Z, 080[send_back]
 07F  22073                    JUMP 073[led_echo]
 080                send_back: 
 080  2D103                    OUTPUT s1, 03[uart_data_tx]
 081  22073                    JUMP 073[led_echo]
 082                           ; Code 3
 082                           ; Write code to check if a byte has been
 082                           ; received by the uart.  If so, write it
 082                           ; back to the uart transmit port.  Then...
 082  22073                    JUMP 073[led_echo]            ; endless loop
 083                           ;================================================================
 083                           ;
 083                           ;================================================================


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\montesv\Downloads\loopback\picoblaze\menu.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   15'd         
 timestamp_minutes 19'd         
 timestamp_seconds 37'd         
 datestamp_year    23'd         
 datestamp_month   4'd          
 datestamp_day     30'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches          00           menu.psm
 leds              01           menu.psm
 uart_data_rx      02           menu.psm
 uart_data_tx      03           menu.psm
 data_present      04           menu.psm
 buffer_full       05           menu.psm
 all_clear         00           menu.psm
 all_set           FF           menu.psm
 ascii_NUL         00           menu.psm
 ascii_SOH         01           menu.psm
 ascii_STX         02           menu.psm
 ascii_ETX         03           menu.psm
 ascii_EOT         04           menu.psm
 ascii_ENQ         05           menu.psm
 ascii_ACK         06           menu.psm
 ascii_BEL         07           menu.psm
 ascii_BS          08           menu.psm
 ascii_HT          09           menu.psm
 ascii_LF          0A           menu.psm
 ascii_VT          0B           menu.psm
 ascii_FF          0C           menu.psm
 ascii_CR          0D           menu.psm
 ascii_SO          0E           menu.psm
 ascii_SI          0F           menu.psm
 ascii_DLE         10           menu.psm
 ascii_DC1         11           menu.psm
 ascii_DC2         12           menu.psm
 ascii_DC3         13           menu.psm
 ascii_DC4         14           menu.psm
 ascii_NAK         15           menu.psm
 ascii_SYN         16           menu.psm
 ascii_ETB         17           menu.psm
 ascii_CAN         18           menu.psm
 ascii_EM          19           menu.psm
 ascii_SUB         1A           menu.psm
 ascii_ESC         1B           menu.psm
 ascii_FS          1C           menu.psm
 ascii_GS          1D           menu.psm
 ascii_RS          1E           menu.psm
 ascii_US          1F           menu.psm
 ascii_SPACE       20           menu.psm
 ascii_EXCLAIM     21           menu.psm
 ascii_DBLQUOT     22           menu.psm
 ascii_NUMSIGN     23           menu.psm
 ascii_DOLLAR      24           menu.psm
 ascii_PERCENT     25           menu.psm
 ascii_AMP         26           menu.psm
 ascii_SINQUOT     27           menu.psm
 ascii_LPAREN      28           menu.psm
 ascii_RPAREN      29           menu.psm
 ascii_ASTERISK    2A           menu.psm
 ascii_PLUS        2B           menu.psm
 ascii_COMMA       2C           menu.psm
 ascii_MINUS       2D           menu.psm
 ascii_PERIOD      2E           menu.psm
 ascii_FWDSLASH    2F           menu.psm
 ascii_0           30           menu.psm
 ascii_1           31           menu.psm
 ascii_2           32           menu.psm
 ascii_3           33           menu.psm
 ascii_4           34           menu.psm
 ascii_5           35           menu.psm
 ascii_6           36           menu.psm
 ascii_7           37           menu.psm
 ascii_8           38           menu.psm
 ascii_9           39           menu.psm
 ascii_COLON       3A           menu.psm
 ascii_SEMI        3B           menu.psm
 ascii_LESS        3C           menu.psm
 ascii_EQUAL       3D           menu.psm
 ascii_GREATER     3E           menu.psm
 ascii_QUESTION    3F           menu.psm
 ascii_CIRCAT      40           menu.psm
 ascii_A           41           menu.psm
 ascii_B           42           menu.psm
 ascii_C           43           menu.psm
 ascii_D           44           menu.psm
 ascii_E           45           menu.psm
 ascii_F           46           menu.psm
 ascii_G           47           menu.psm
 ascii_H           48           menu.psm
 ascii_I           49           menu.psm
 ascii_J           4A           menu.psm
 ascii_K           4B           menu.psm
 ascii_L           4C           menu.psm
 ascii_M           4D           menu.psm
 ascii_N           4E           menu.psm
 ascii_O           4F           menu.psm
 ascii_P           50           menu.psm
 ascii_Q           51           menu.psm
 ascii_R           52           menu.psm
 ascii_S           53           menu.psm
 ascii_T           54           menu.psm
 ascii_U           55           menu.psm
 ascii_V           56           menu.psm
 ascii_W           57           menu.psm
 ascii_X           58           menu.psm
 ascii_Y           59           menu.psm
 ascii_Z           5A           menu.psm
 ascii_LBKT        5B           menu.psm
 ascii_BKSLASH     5C           menu.psm
 ascii_RBKT        5D           menu.psm
 ascii_CARET       5E           menu.psm
 ascii_UNDER       5F           menu.psm
 ascii_TICK        60           menu.psm
 ascii_a           61           menu.psm
 ascii_b           62           menu.psm
 ascii_c           63           menu.psm
 ascii_d           64           menu.psm
 ascii_e           65           menu.psm
 ascii_f           66           menu.psm
 ascii_g           67           menu.psm
 ascii_h           68           menu.psm
 ascii_i           69           menu.psm
 ascii_j           6A           menu.psm
 ascii_k           6B           menu.psm
 ascii_l           6C           menu.psm
 ascii_m           6D           menu.psm
 ascii_n           6E           menu.psm
 ascii_o           6F           menu.psm
 ascii_p           70           menu.psm
 ascii_q           71           menu.psm
 ascii_r           72           menu.psm
 ascii_s           73           menu.psm
 ascii_t           74           menu.psm
 ascii_u           75           menu.psm
 ascii_v           76           menu.psm
 ascii_w           77           menu.psm
 ascii_x           78           menu.psm
 ascii_y           79           menu.psm
 ascii_z           7A           menu.psm
 ascii_LBRACE      7B           menu.psm
 ascii_VBAR        7C           menu.psm
 ascii_RBRACE      7D           menu.psm
 ascii_TILDE       7E           menu.psm
 ascii_DEL         7F           menu.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "30 Apr 2023"  
 timestamp$        "15:19:37"     



List of line labels

   Label              Addr  Source PSM File

 * cold_start         000   menu.psm
 * main               067   menu.psm
   next_letter        068   menu.psm
 * ready_buffer       06D   menu.psm
   buffer_full_call   071   menu.psm
   led_echo           073   menu.psm
   rs232_echo         078   menu.psm
   send_back          080   menu.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             55
 STAR              -

 AND               -
 OR                -
 XOR               4

 ADD               1
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE           3
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             4
 OUTPUT            3
 OUTPUTK           -

 STORE             1
 FETCH             1

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP              9
 JUMP@             -
 CALL              -
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
